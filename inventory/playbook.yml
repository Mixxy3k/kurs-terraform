---
- name: Setup Node.js and MongoDB on Ubuntu
  hosts: servers
  become: yes
 
  tasks:
    # 1. Zainstaluj zależności
    - name: Install prerequisites
      apt:
        name: 
          - curl
          - gnupg
          - build-essential
          - git
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: present
        update_cache: yes
 
    # 2. Zainstaluj Node.js
    - name: Add Node.js repository
      shell: curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
      # get_url:
      #   url: https://deb.nodesource.com/setup_16.x
      #   dest: tmp/setup_node.sh
 
    # command: curl -fsSL https://deb.nodesource.com/setup_16.x | -E bash -
 
    - name: Install Node.js
      apt:
        name: nodejs
        state: present
 
 
    # LibSSL
    - name: Install libssl1.1
      shell: |
        wget http://ftp.debian.org/debian/pool/main/o/openssl/libssl1.1_1.1.1n-0+deb10u3_amd64.deb
        dpkg -i libssl1.1_1.1.1n-0+deb10u3_amd64.deb
      args:
        creates: /usr/lib/x86_64-linux-gnu/libssl.so.1.1
 
 
    # 3. Zainstaluj MongoDB
    - name: Add MongoDB GPG key
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-6.0.asc
        state: present
 
    - name: Add MongoDB repository
      copy:
        content: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse"
        dest: /etc/apt/sources.list.d/mongodb-org-6.0.list
 
    - name: Install MongoDB
      apt:
        name: mongodb-org
        state: present
        update_cache: yes
 
    # 4. Uruchom MongoDB
    - name: Start and enable MongoDB service
      service:
        name: mongod
        state: started
        enabled: yes
 
    # 5. Utwórz aplikację Node.js
    - name: Create application directory
      file:
        path: /var/www/app1
        state: directory
        owner: root
        group: root
        mode: '0755'
 
 
    # - name: SSH
    #   copy:
    #     src: /root/.ssh/id_rsa
    #     dest: /
    #     group: root
    #     mode: '0600'
 
 
    - name: Check SSH key
      file: 
        path: /root/.ssh
        state: directory
        owner: root
        group: root
        mode: '0700'
 
    - name: Generate SSH key
      command: ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N "" 
      args: 
        creates: /root/.ssh/id_rsa.pub
 
    - name: Display SSH key
      command: cat /root/.ssh/id_rsa.pub
      register: ssh_public_key
 
    - name: Show SSH key for Github
      debug:
        msg: |
          Dodaj klucz publiczny do swojego konta w portalu github.com:
          {{ ssh_public_key.stdout }}

    - name: Wait for user to add SSH key
      pause:
        prompt: "Press Enter after adding SSH key to Github account"
 
    - name: Known hosts
      shell:  |
        ssh-keyscan -H github.com >> /root/.ssh/known_hosts   
      args:
        creates: /root/.ssh/known_hosts
 
    - name: Clone repository
      git:
        repo: 'git@github.com:Mixxy3k/kurs-terraform.git'
        dest: /var/www/app1
        version: main
        key_file: /root/.ssh/id_rsa
      register: git_result
 
    - name: Install npm dependencies
      command: npm install 
      args:
        chdir: /var/www/app1
 
    - name: Start Node.js app
      command: node server.js
      args:
        chdir: /var/www/app1
        creates: /tmp/app.lock